name: Build and Deploy to Azure Function App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to ACR
      env:
        ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
        ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
        ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      run: echo $ACR_PASSWORD | docker login $ACR_LOGIN_SERVER -u $ACR_USERNAME --password-stdin

    - name: Build and push Docker image
      env:
        ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      run: |
        IMAGE_NAME=${ACR_LOGIN_SERVER}/functionapp:${{ github.sha }}
        docker build -t $IMAGE_NAME -f app/Dockerfile app
        docker push $IMAGE_NAME

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Function App
      env:
        ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
        ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
        ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
        FUNCTION_APP_NAME: ${{ secrets.FUNCTION_APP_NAME }}
        RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      run: |
        az functionapp config container set \
          --name $FUNCTION_APP_NAME \
          --resource-group $RESOURCE_GROUP \
          --docker-custom-image-name ${ACR_LOGIN_SERVER}/functionapp:${{ github.sha }} \
          --docker-registry-server-url https://$ACR_LOGIN_SERVER \
          --docker-registry-server-user $ACR_USERNAME \
          --docker-registry-server-password $ACR_PASSWORD

    - name: Restart Azure Function App
      env:
        FUNCTION_APP_NAME: ${{ secrets.FUNCTION_APP_NAME }}
        RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      run: |
        az functionapp restart \
          --name $FUNCTION_APP_NAME \
          --resource-group $RESOURCE_GROUP
